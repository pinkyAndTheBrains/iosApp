//
// AccountAPI.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Alamofire



public class AccountAPI: APIBase {
    /**

     - parameter model: (body)  
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func accountAddExternalLogin(model model: AddExternalLoginBindingModel, completion: ((data: AnyObject?, error: ErrorType?) -> Void)) {
        accountAddExternalLoginWithRequestBuilder(model: model).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     - POST /api/Account/AddExternalLogin
     - examples: [{contentType=application/json, example="{}"}, {contentType=application/xml, example=not implemented io.swagger.models.properties.ObjectProperty@37aadb4f}]
     - examples: [{contentType=application/json, example="{}"}, {contentType=application/xml, example=not implemented io.swagger.models.properties.ObjectProperty@37aadb4f}]
     
     - parameter model: (body)  

     - returns: RequestBuilder<AnyObject> 
     */
    public class func accountAddExternalLoginWithRequestBuilder(model model: AddExternalLoginBindingModel) -> RequestBuilder<AnyObject> {
        let path = "/api/Account/AddExternalLogin"
        let URLString = SwaggerClientAPI.basePath + path
        let parameters = model.encodeToJSON() as? [String:AnyObject]
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<AnyObject>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", URLString: URLString, parameters: convertedParameters, isBody: true)
    }

    /**

     - parameter model: (body)  
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func accountChangePassword(model model: ChangePasswordBindingModel, completion: ((data: AnyObject?, error: ErrorType?) -> Void)) {
        accountChangePasswordWithRequestBuilder(model: model).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     - POST /api/Account/ChangePassword
     - examples: [{contentType=application/json, example="{}"}, {contentType=application/xml, example=not implemented io.swagger.models.properties.ObjectProperty@37aadb4f}]
     - examples: [{contentType=application/json, example="{}"}, {contentType=application/xml, example=not implemented io.swagger.models.properties.ObjectProperty@37aadb4f}]
     
     - parameter model: (body)  

     - returns: RequestBuilder<AnyObject> 
     */
    public class func accountChangePasswordWithRequestBuilder(model model: ChangePasswordBindingModel) -> RequestBuilder<AnyObject> {
        let path = "/api/Account/ChangePassword"
        let URLString = SwaggerClientAPI.basePath + path
        let parameters = model.encodeToJSON() as? [String:AnyObject]
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<AnyObject>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", URLString: URLString, parameters: convertedParameters, isBody: true)
    }

    /**

     - parameter provider: (query)  
     - parameter error: (query)  (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func accountGetExternalLogin(provider provider: String, error: String? = nil, completion: ((data: AnyObject?, error: ErrorType?) -> Void)) {
        accountGetExternalLoginWithRequestBuilder(provider: provider, error: error).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     - GET /api/Account/ExternalLogin
     - examples: [{contentType=application/json, example="{}"}, {contentType=application/xml, example=not implemented io.swagger.models.properties.ObjectProperty@37aadb4f}]
     - examples: [{contentType=application/json, example="{}"}, {contentType=application/xml, example=not implemented io.swagger.models.properties.ObjectProperty@37aadb4f}]
     
     - parameter provider: (query)  
     - parameter error: (query)  (optional)

     - returns: RequestBuilder<AnyObject> 
     */
    public class func accountGetExternalLoginWithRequestBuilder(provider provider: String, error: String? = nil) -> RequestBuilder<AnyObject> {
        let path = "/api/Account/ExternalLogin"
        let URLString = SwaggerClientAPI.basePath + path

        let nillableParameters: [String:AnyObject?] = [
            "provider": provider,
            "error": error
        ]
 
        let parameters = APIHelper.rejectNil(nillableParameters)
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<AnyObject>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: URLString, parameters: convertedParameters, isBody: false)
    }

    /**

     - parameter returnUrl: (query)  
     - parameter generateState: (query)  (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func accountGetExternalLogins(returnUrl returnUrl: String, generateState: Bool? = nil, completion: ((data: [ExternalLoginViewModel]?, error: ErrorType?) -> Void)) {
        accountGetExternalLoginsWithRequestBuilder(returnUrl: returnUrl, generateState: generateState).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     - GET /api/Account/ExternalLogins
     - examples: [{contentType=application/json, example=[ {
  "State" : "aeiou",
  "Url" : "aeiou",
  "Name" : "aeiou"
} ]}, {contentType=application/xml, example=<null>
  <Name>string</Name>
  <Url>string</Url>
  <State>string</State>
</null>}]
     - examples: [{contentType=application/json, example=[ {
  "State" : "aeiou",
  "Url" : "aeiou",
  "Name" : "aeiou"
} ]}, {contentType=application/xml, example=<null>
  <Name>string</Name>
  <Url>string</Url>
  <State>string</State>
</null>}]
     
     - parameter returnUrl: (query)  
     - parameter generateState: (query)  (optional)

     - returns: RequestBuilder<[ExternalLoginViewModel]> 
     */
    public class func accountGetExternalLoginsWithRequestBuilder(returnUrl returnUrl: String, generateState: Bool? = nil) -> RequestBuilder<[ExternalLoginViewModel]> {
        let path = "/api/Account/ExternalLogins"
        let URLString = SwaggerClientAPI.basePath + path

        let nillableParameters: [String:AnyObject?] = [
            "returnUrl": returnUrl,
            "generateState": generateState
        ]
 
        let parameters = APIHelper.rejectNil(nillableParameters)
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<[ExternalLoginViewModel]>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: URLString, parameters: convertedParameters, isBody: false)
    }

    /**

     - parameter returnUrl: (query)  
     - parameter generateState: (query)  (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func accountGetManageInfo(returnUrl returnUrl: String, generateState: Bool? = nil, completion: ((data: ManageInfoViewModel?, error: ErrorType?) -> Void)) {
        accountGetManageInfoWithRequestBuilder(returnUrl: returnUrl, generateState: generateState).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     - GET /api/Account/ManageInfo
     - examples: [{contentType=application/json, example={
  "Email" : "aeiou",
  "LocalLoginProvider" : "aeiou",
  "Logins" : [ {
    "ProviderKey" : "aeiou",
    "LoginProvider" : "aeiou"
  } ],
  "ExternalLoginProviders" : [ {
    "State" : "aeiou",
    "Url" : "aeiou",
    "Name" : "aeiou"
  } ]
}}, {contentType=application/xml, example=<null>
  <LocalLoginProvider>string</LocalLoginProvider>
  <Email>string</Email>
</null>}]
     - examples: [{contentType=application/json, example={
  "Email" : "aeiou",
  "LocalLoginProvider" : "aeiou",
  "Logins" : [ {
    "ProviderKey" : "aeiou",
    "LoginProvider" : "aeiou"
  } ],
  "ExternalLoginProviders" : [ {
    "State" : "aeiou",
    "Url" : "aeiou",
    "Name" : "aeiou"
  } ]
}}, {contentType=application/xml, example=<null>
  <LocalLoginProvider>string</LocalLoginProvider>
  <Email>string</Email>
</null>}]
     
     - parameter returnUrl: (query)  
     - parameter generateState: (query)  (optional)

     - returns: RequestBuilder<ManageInfoViewModel> 
     */
    public class func accountGetManageInfoWithRequestBuilder(returnUrl returnUrl: String, generateState: Bool? = nil) -> RequestBuilder<ManageInfoViewModel> {
        let path = "/api/Account/ManageInfo"
        let URLString = SwaggerClientAPI.basePath + path

        let nillableParameters: [String:AnyObject?] = [
            "returnUrl": returnUrl,
            "generateState": generateState
        ]
 
        let parameters = APIHelper.rejectNil(nillableParameters)
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<ManageInfoViewModel>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: URLString, parameters: convertedParameters, isBody: false)
    }

    /**

     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func accountGetUserInfo(completion: ((data: UserInfoViewModel?, error: ErrorType?) -> Void)) {
        accountGetUserInfoWithRequestBuilder().execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     - GET /api/Account/UserInfo
     - examples: [{contentType=application/json, example={
  "Email" : "aeiou",
  "LoginProvider" : "aeiou",
  "HasRegistered" : true
}}, {contentType=application/xml, example=<null>
  <Email>string</Email>
  <HasRegistered>true</HasRegistered>
  <LoginProvider>string</LoginProvider>
</null>}]
     - examples: [{contentType=application/json, example={
  "Email" : "aeiou",
  "LoginProvider" : "aeiou",
  "HasRegistered" : true
}}, {contentType=application/xml, example=<null>
  <Email>string</Email>
  <HasRegistered>true</HasRegistered>
  <LoginProvider>string</LoginProvider>
</null>}]

     - returns: RequestBuilder<UserInfoViewModel> 
     */
    public class func accountGetUserInfoWithRequestBuilder() -> RequestBuilder<UserInfoViewModel> {
        let path = "/api/Account/UserInfo"
        let URLString = SwaggerClientAPI.basePath + path

        let nillableParameters: [String:AnyObject?] = [:]
 
        let parameters = APIHelper.rejectNil(nillableParameters)
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<UserInfoViewModel>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: URLString, parameters: convertedParameters, isBody: true)
    }

    /**

     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func accountLogout(completion: ((data: AnyObject?, error: ErrorType?) -> Void)) {
        accountLogoutWithRequestBuilder().execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     - POST /api/Account/Logout
     - examples: [{contentType=application/json, example="{}"}, {contentType=application/xml, example=not implemented io.swagger.models.properties.ObjectProperty@37aadb4f}]
     - examples: [{contentType=application/json, example="{}"}, {contentType=application/xml, example=not implemented io.swagger.models.properties.ObjectProperty@37aadb4f}]

     - returns: RequestBuilder<AnyObject> 
     */
    public class func accountLogoutWithRequestBuilder() -> RequestBuilder<AnyObject> {
        let path = "/api/Account/Logout"
        let URLString = SwaggerClientAPI.basePath + path

        let nillableParameters: [String:AnyObject?] = [:]
 
        let parameters = APIHelper.rejectNil(nillableParameters)
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<AnyObject>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", URLString: URLString, parameters: convertedParameters, isBody: true)
    }

    /**

     - parameter model: (body)  
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func accountRegister(model model: RegisterBindingModel, completion: ((data: AnyObject?, error: ErrorType?) -> Void)) {
        accountRegisterWithRequestBuilder(model: model).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     - POST /api/Account/Register
     - examples: [{contentType=application/json, example="{}"}, {contentType=application/xml, example=not implemented io.swagger.models.properties.ObjectProperty@37aadb4f}]
     - examples: [{contentType=application/json, example="{}"}, {contentType=application/xml, example=not implemented io.swagger.models.properties.ObjectProperty@37aadb4f}]
     
     - parameter model: (body)  

     - returns: RequestBuilder<AnyObject> 
     */
    public class func accountRegisterWithRequestBuilder(model model: RegisterBindingModel) -> RequestBuilder<AnyObject> {
        let path = "/api/Account/Register"
        let URLString = SwaggerClientAPI.basePath + path
        let parameters = model.encodeToJSON() as? [String:AnyObject]
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<AnyObject>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", URLString: URLString, parameters: convertedParameters, isBody: true)
    }

    /**

     - parameter model: (body)  
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func accountRegisterExternal(model model: RegisterExternalBindingModel, completion: ((data: AnyObject?, error: ErrorType?) -> Void)) {
        accountRegisterExternalWithRequestBuilder(model: model).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     - POST /api/Account/RegisterExternal
     - examples: [{contentType=application/json, example="{}"}, {contentType=application/xml, example=not implemented io.swagger.models.properties.ObjectProperty@37aadb4f}]
     - examples: [{contentType=application/json, example="{}"}, {contentType=application/xml, example=not implemented io.swagger.models.properties.ObjectProperty@37aadb4f}]
     
     - parameter model: (body)  

     - returns: RequestBuilder<AnyObject> 
     */
    public class func accountRegisterExternalWithRequestBuilder(model model: RegisterExternalBindingModel) -> RequestBuilder<AnyObject> {
        let path = "/api/Account/RegisterExternal"
        let URLString = SwaggerClientAPI.basePath + path
        let parameters = model.encodeToJSON() as? [String:AnyObject]
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<AnyObject>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", URLString: URLString, parameters: convertedParameters, isBody: true)
    }

    /**

     - parameter model: (body)  
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func accountRemoveLogin(model model: RemoveLoginBindingModel, completion: ((data: AnyObject?, error: ErrorType?) -> Void)) {
        accountRemoveLoginWithRequestBuilder(model: model).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     - POST /api/Account/RemoveLogin
     - examples: [{contentType=application/json, example="{}"}, {contentType=application/xml, example=not implemented io.swagger.models.properties.ObjectProperty@37aadb4f}]
     - examples: [{contentType=application/json, example="{}"}, {contentType=application/xml, example=not implemented io.swagger.models.properties.ObjectProperty@37aadb4f}]
     
     - parameter model: (body)  

     - returns: RequestBuilder<AnyObject> 
     */
    public class func accountRemoveLoginWithRequestBuilder(model model: RemoveLoginBindingModel) -> RequestBuilder<AnyObject> {
        let path = "/api/Account/RemoveLogin"
        let URLString = SwaggerClientAPI.basePath + path
        let parameters = model.encodeToJSON() as? [String:AnyObject]
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<AnyObject>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", URLString: URLString, parameters: convertedParameters, isBody: true)
    }

    /**

     - parameter model: (body)  
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func accountSetPassword(model model: SetPasswordBindingModel, completion: ((data: AnyObject?, error: ErrorType?) -> Void)) {
        accountSetPasswordWithRequestBuilder(model: model).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     - POST /api/Account/SetPassword
     - examples: [{contentType=application/json, example="{}"}, {contentType=application/xml, example=not implemented io.swagger.models.properties.ObjectProperty@37aadb4f}]
     - examples: [{contentType=application/json, example="{}"}, {contentType=application/xml, example=not implemented io.swagger.models.properties.ObjectProperty@37aadb4f}]
     
     - parameter model: (body)  

     - returns: RequestBuilder<AnyObject> 
     */
    public class func accountSetPasswordWithRequestBuilder(model model: SetPasswordBindingModel) -> RequestBuilder<AnyObject> {
        let path = "/api/Account/SetPassword"
        let URLString = SwaggerClientAPI.basePath + path
        let parameters = model.encodeToJSON() as? [String:AnyObject]
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<AnyObject>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", URLString: URLString, parameters: convertedParameters, isBody: true)
    }

}
